{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "CerberusFunctionLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/cerberus-lambda-local-CerberusFunction"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "cerberus-lambda",
                  "local",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:TagResource"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cerberus-lambda-local*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/cerberus-lambda-local*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:ReceiveMessage",
                    "sqs:DeleteMessage",
                    "sqs:GetQueueAttributes"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "ClientQueue",
                        "Arn"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "cerberus-lambda",
              "local",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "CerberusFunctionLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/cerberus-lambda/local/1720380041637-2024-07-07T19:20:41.637Z/./src/Cerberus/Cerberus.zip"
        },
        "Handler": "Cerberus::Cerberus.Function::FunctionHandler",
        "Runtime": "dotnet6",
        "FunctionName": "cerberus-lambda-local-CerberusFunction",
        "MemorySize": 1024,
        "Timeout": 900,
        "Architectures": [
          "arm64"
        ],
        "Environment": {
          "Variables": {
            "UserPoolId": {
              "Ref": "CognitoUserPool"
            },
            "UserPoolClientId": {
              "Ref": "CognitoUserPoolClient"
            }
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "CerberusFunctionLogGroup"
      ]
    },
    "CerberusFunctionLambdaVersionqxLhZj4jqrvOddbFCFBgDJYqVjlijByVmg52EJHt0E": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "CerberusFunctionLambdaFunction"
        },
        "CodeSha256": "xi7vWQz05cTvTKvkX0JBkWSrSc011nO76QCQlDlS02Q="
      }
    },
    "CerberusFunctionEventSourceMappingSQSClientQueue": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "DependsOn": [
        "IamRoleLambdaExecution"
      ],
      "Properties": {
        "BatchSize": 10,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "ClientQueue",
            "Arn"
          ]
        },
        "FunctionName": {
          "Fn::GetAtt": [
            "CerberusFunctionLambdaFunction",
            "Arn"
          ]
        },
        "Enabled": true
      }
    },
    "ClientQueue": {
      "Type": "AWS::SQS::Queue",
      "DeletionPolicy": "Delete",
      "Properties": {
        "QueueName": "client",
        "ReceiveMessageWaitTimeSeconds": 20,
        "RedrivePolicy": {
          "maxReceiveCount": 2,
          "deadLetterTargetArn": {
            "Fn::GetAtt": [
              "ClientDeadLetterQueue",
              "Arn"
            ]
          }
        }
      }
    },
    "ClientDeadLetterQueue": {
      "Type": "AWS::SQS::Queue",
      "DeletionPolicy": "Delete",
      "Properties": {
        "QueueName": "client-dlq",
        "ReceiveMessageWaitTimeSeconds": 20
      }
    },
    "CognitoUserPool": {
      "Type": "AWS::Cognito::UserPool",
      "Properties": {
        "UserPoolName": "cerberus-user-pool",
        "AutoVerifiedAttributes": [
          "email"
        ],
        "Schema": [
          {
            "Name": "email",
            "Required": true,
            "Mutable": true
          },
          {
            "Name": "cpf",
            "Required": false,
            "Mutable": true
          }
        ]
      }
    },
    "CognitoUserPoolClient": {
      "Type": "AWS::Cognito::UserPoolClient",
      "Properties": {
        "ClientName": "cerberus-user-pool-client",
        "UserPoolId": {
          "Ref": "CognitoUserPool"
        },
        "ExplicitAuthFlows": [
          "ADMIN_NO_SRP_AUTH"
        ]
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-cerberus-lambda-local-ServerlessDeploymentBucketName"
      }
    },
    "CerberusFunctionLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "CerberusFunctionLambdaVersionqxLhZj4jqrvOddbFCFBgDJYqVjlijByVmg52EJHt0E"
      },
      "Export": {
        "Name": "sls-cerberus-lambda-local-CerberusFunctionLambdaFunctionQualifiedArn"
      }
    }
  }
}